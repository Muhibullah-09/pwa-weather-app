{"ast":null,"code":"import _regeneratorRuntime from\"C:\\\\Users\\\\Muhib\\\\Documents\\\\GitHub\\\\pwa-weather-app\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/regenerator\";import _asyncToGenerator from\"C:\\\\Users\\\\Muhib\\\\Documents\\\\GitHub\\\\pwa-weather-app\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";import _slicedToArray from\"C:\\\\Users\\\\Muhib\\\\Documents\\\\GitHub\\\\pwa-weather-app\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";import React,{useState}from'react';import FetchWeather from'./Components/FetchWeather';import'./App.css';var App=function App(){var _useState=useState(''),_useState2=_slicedToArray(_useState,2),query=_useState2[0],setQuery=_useState2[1];var _useState3=useState({}),_useState4=_slicedToArray(_useState3,2),weather=_useState4[0],setWeather=_useState4[1];var search=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(e){var data;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:if(!(e.key==='Enter')){_context.next=6;break;}_context.next=3;return FetchWeather(query);case 3:data=_context.sent;setWeather(data);setQuery('');case 6:case\"end\":return _context.stop();}}},_callee);}));return function search(_x){return _ref.apply(this,arguments);};}();return/*#__PURE__*/React.createElement(\"div\",{className:\"main-container\"},/*#__PURE__*/React.createElement(\"input\",{type:\"text\",className:\"search\",placeholder:\"Search...\",value:query,onChange:function onChange(e){return setQuery(e.target.value);},onKeyPress:search}),weather.main&&/*#__PURE__*/React.createElement(\"div\",{className:\"city\"},/*#__PURE__*/React.createElement(\"h2\",{className:\"city-name\"},/*#__PURE__*/React.createElement(\"span\",null,weather.name),/*#__PURE__*/React.createElement(\"sup\",null,weather.sys.country)),/*#__PURE__*/React.createElement(\"div\",{className:\"city-temp\"},Math.round(weather.main.temp),/*#__PURE__*/React.createElement(\"sup\",null,\"\\xB0C\")),/*#__PURE__*/React.createElement(\"div\",{className:\"info\"},/*#__PURE__*/React.createElement(\"img\",{className:\"city-icon\",src:\"https://openweathermap.org/img/wn/\".concat(weather.weather[0].icon,\"@2x.png\"),alt:weather.weather[0].description}),/*#__PURE__*/React.createElement(\"p\",null,weather.weather[0].description),/*#__PURE__*/React.createElement(\"br\",null),/*#__PURE__*/React.createElement(\"p\",null,\"Feels like : \",Math.round(weather.main.feels_like)))));};export default App;","map":{"version":3,"sources":["C:/Users/Muhib/Documents/GitHub/pwa-weather-app/src/App.js"],"names":["React","useState","FetchWeather","App","query","setQuery","weather","setWeather","search","e","key","data","target","value","main","name","sys","country","Math","round","temp","icon","description","feels_like"],"mappings":"6gBAAA,MAAOA,CAAAA,KAAP,EAAgBC,QAAhB,KAAgC,OAAhC,CAEA,MAAOC,CAAAA,YAAP,KAAyB,2BAAzB,CAEA,MAAO,WAAP,CAEA,GAAMC,CAAAA,GAAG,CAAG,QAANA,CAAAA,GAAM,EAAM,eACUF,QAAQ,CAAC,EAAD,CADlB,wCACTG,KADS,eACFC,QADE,8BAEcJ,QAAQ,CAAC,EAAD,CAFtB,yCAETK,OAFS,eAEAC,UAFA,eAIhB,GAAMC,CAAAA,MAAM,0FAAG,iBAAOC,CAAP,gIACTA,CAAC,CAACC,GAAF,GAAU,OADD,gDAEQR,CAAAA,YAAY,CAACE,KAAD,CAFpB,QAELO,IAFK,eAIXJ,UAAU,CAACI,IAAD,CAAV,CACAN,QAAQ,CAAC,EAAD,CAAR,CALW,sDAAH,kBAANG,CAAAA,MAAM,4CAAZ,CASA,mBACE,2BAAK,SAAS,CAAC,gBAAf,eACE,6BAAO,IAAI,CAAC,MAAZ,CAAmB,SAAS,CAAC,QAA7B,CAAsC,WAAW,CAAC,WAAlD,CAA8D,KAAK,CAAEJ,KAArE,CAA4E,QAAQ,CAAE,kBAACK,CAAD,QAAOJ,CAAAA,QAAQ,CAACI,CAAC,CAACG,MAAF,CAASC,KAAV,CAAf,EAAtF,CAAuH,UAAU,CAAEL,MAAnI,EADF,CAEGF,OAAO,CAACQ,IAAR,eACC,2BAAK,SAAS,CAAC,MAAf,eACE,0BAAI,SAAS,CAAC,WAAd,eACE,gCAAOR,OAAO,CAACS,IAAf,CADF,cAEE,+BAAMT,OAAO,CAACU,GAAR,CAAYC,OAAlB,CAFF,CADF,cAKE,2BAAK,SAAS,CAAC,WAAf,EACGC,IAAI,CAACC,KAAL,CAAWb,OAAO,CAACQ,IAAR,CAAaM,IAAxB,CADH,cAEE,uCAFF,CALF,cASE,2BAAK,SAAS,CAAC,MAAf,eACE,2BAAK,SAAS,CAAC,WAAf,CAA2B,GAAG,6CAAuCd,OAAO,CAACA,OAAR,CAAgB,CAAhB,EAAmBe,IAA1D,WAA9B,CAAuG,GAAG,CAAEf,OAAO,CAACA,OAAR,CAAgB,CAAhB,EAAmBgB,WAA/H,EADF,cAEE,6BAAIhB,OAAO,CAACA,OAAR,CAAgB,CAAhB,EAAmBgB,WAAvB,CAFF,cAEyC,8BAFzC,cAGE,6CAAiBJ,IAAI,CAACC,KAAL,CAAWb,OAAO,CAACQ,IAAR,CAAaS,UAAxB,CAAjB,CAHF,CATF,CAHJ,CADF,CAsBD,CAnCD,CAqCA,cAAepB,CAAAA,GAAf","sourcesContent":["import React, { useState } from 'react';\r\n\r\nimport FetchWeather from './Components/FetchWeather';\r\n\r\nimport './App.css';\r\n\r\nconst App = () => {\r\n  const [query, setQuery] = useState('');\r\n  const [weather, setWeather] = useState({});\r\n\r\n  const search = async (e) => {\r\n    if (e.key === 'Enter') {\r\n      const data = await FetchWeather(query);\r\n\r\n      setWeather(data);\r\n      setQuery('');\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className=\"main-container\">\r\n      <input type=\"text\" className=\"search\" placeholder=\"Search...\" value={query} onChange={(e) => setQuery(e.target.value)} onKeyPress={search} />\r\n      {weather.main && (\r\n        <div className=\"city\">\r\n          <h2 className=\"city-name\">\r\n            <span>{weather.name}</span>\r\n            <sup>{weather.sys.country}</sup>\r\n          </h2>\r\n          <div className=\"city-temp\">\r\n            {Math.round(weather.main.temp)}\r\n            <sup>&deg;C</sup>\r\n          </div>\r\n          <div className=\"info\">\r\n            <img className=\"city-icon\" src={`https://openweathermap.org/img/wn/${weather.weather[0].icon}@2x.png`} alt={weather.weather[0].description} />\r\n            <p>{weather.weather[0].description}</p><br />\r\n            <p>Feels like : {Math.round(weather.main.feels_like)}</p>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App"]},"metadata":{},"sourceType":"module"}