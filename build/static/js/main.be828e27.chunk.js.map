{"version":3,"sources":["Components/FetchWeather.js","App.js","index.js"],"names":["FetchWeather","query","a","axios","get","params","q","units","APPID","data","App","useState","setQuery","weather","setWeather","search","e","key","className","type","placeholder","value","onChange","target","onKeyPress","main","name","sys","country","Math","round","temp","src","icon","alt","description","feels_like","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"6QAkBeA,EAZG,uCAAG,WAAOC,GAAP,iBAAAC,EAAA,sEACMC,IAAMC,IAJrB,kDAI8B,CAClCC,OAAQ,CACJC,EAAGL,EACHM,MAAO,SACPC,MAPI,sCAEK,uBACTC,EADS,EACTA,KADS,kBASVA,GATU,2CAAH,sDCqCHC,G,MArCH,WAAO,IAAD,EACUC,mBAAS,IADnB,mBACTV,EADS,KACFW,EADE,OAEcD,mBAAS,IAFvB,mBAETE,EAFS,KAEAC,EAFA,KAIVC,EAAM,uCAAG,WAAOC,GAAP,eAAAd,EAAA,yDACC,UAAVc,EAAEC,IADO,gCAEQjB,EAAaC,GAFrB,OAELQ,EAFK,OAIXK,EAAWL,GACXG,EAAS,IALE,2CAAH,sDASZ,OACE,yBAAKM,UAAU,kBACb,2BAAOC,KAAK,OAAOD,UAAU,SAASE,YAAY,YAAYC,MAAOpB,EAAOqB,SAAU,SAACN,GAAD,OAAOJ,EAASI,EAAEO,OAAOF,QAAQG,WAAYT,IAClIF,EAAQY,MACP,yBAAKP,UAAU,QACb,wBAAIA,UAAU,aACZ,8BAAOL,EAAQa,MACf,6BAAMb,EAAQc,IAAIC,UAEpB,yBAAKV,UAAU,aACZW,KAAKC,MAAMjB,EAAQY,KAAKM,MACzB,uCAEF,yBAAKb,UAAU,QACb,yBAAKA,UAAU,YAAYc,IAAG,4CAAuCnB,EAAQA,QAAQ,GAAGoB,KAA1D,WAAyEC,IAAKrB,EAAQA,QAAQ,GAAGsB,cAC/H,2BAAItB,EAAQA,QAAQ,GAAGsB,aAAgB,6BACvC,2CAAiBN,KAAKC,MAAMjB,EAAQY,KAAKW,kBC/BrDC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,W","file":"static/js/main.be828e27.chunk.js","sourcesContent":["import axios from 'axios';\r\n\r\n\r\nconst URL = 'https://api.openweathermap.org/data/2.5/weather';\r\nconst API_KEY = 'f33a484cf794d08d0148764789aaba32';\r\n\r\nconst FetchWeather = async (query) => {\r\n    const { data } = await axios.get(URL, {\r\n        params: {\r\n            q: query,\r\n            units: 'metric',\r\n            APPID: API_KEY,\r\n        }\r\n    });\r\n\r\n    return data;\r\n}\r\n\r\nexport default FetchWeather\r\n","import React, { useState } from 'react';\r\n\r\nimport FetchWeather from './Components/FetchWeather';\r\n\r\nimport './App.css';\r\n\r\nconst App = () => {\r\n  const [query, setQuery] = useState('');\r\n  const [weather, setWeather] = useState({});\r\n\r\n  const search = async (e) => {\r\n    if (e.key === 'Enter') {\r\n      const data = await FetchWeather(query);\r\n\r\n      setWeather(data);\r\n      setQuery('');\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className=\"main-container\">\r\n      <input type=\"text\" className=\"search\" placeholder=\"Search...\" value={query} onChange={(e) => setQuery(e.target.value)} onKeyPress={search} />\r\n      {weather.main && (\r\n        <div className=\"city\">\r\n          <h2 className=\"city-name\">\r\n            <span>{weather.name}</span>\r\n            <sup>{weather.sys.country}</sup>\r\n          </h2>\r\n          <div className=\"city-temp\">\r\n            {Math.round(weather.main.temp)}\r\n            <sup>&deg;C</sup>\r\n          </div>\r\n          <div className=\"info\">\r\n            <img className=\"city-icon\" src={`https://openweathermap.org/img/wn/${weather.weather[0].icon}@2x.png`} alt={weather.weather[0].description} />\r\n            <p>{weather.weather[0].description}</p><br />\r\n            <p>Feels like : {Math.round(weather.main.feels_like)}</p>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}